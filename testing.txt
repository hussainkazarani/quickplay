chrome.runtime.onMessage.addListener(async (message, sender, sendResponse) => {
  if (message.type === "SETTING_CUSTOM_SPEED") {
    // return "SUCCESFULLY GOT DATA TO BACKGROUND.JS";
    console.log("SPEED PASSED IS:", message.customSpeed);

    SpeedValidator.validateSpeed(message.customSpeed).then((isValid) => {
      console.log("VALIDORNOT", isValid);

      if (isValid) {
        sendResponse({ ans: "SUCCESFULLY SENT DATA ALL THE WAY TO STORAGE" });
      } else {
        sendResponse({ ans: "FAILED TO SENDDD" });
      }
    });
  }
  return true;
});


 customSpeedElement.addEventListener("keypress", async (e) => {
    if (e.key === "Enter") {
      console.log("SENT CUSTOM SPEED TO BACKGROUND.JS");
      chrome.runtime.sendMessage({ type: "SETTING_CUSTOM_SPEED", customSpeed: e.target.value }, (response) => {
        if (response) {
          console.log("DATA IS :", response.ans);
        } else {
          console.log("DATA IS :", response.ans);
        }
      });
    }
  });


  async validateSpeed(speedFromUser) {
    const floatSpeed = parseFloat(speedFromUser);
    const isValid = !isNaN(floatSpeed) && floatSpeed >= 0.5 && floatSpeed <= 5.0;
    if (isValid) {
      await StorageManager.updateSpeeds(floatSpeed);
      return true;
    } else {
      console.log("FAILED SINCE NOT VALIDATED");
      return false;
    }
  },

  async updateSpeeds(speed) {
    await chrome.storage.local.set({ speeds: speed });
    console.log("SUCCESFULLY CHANGED THE VALUES");
  },
